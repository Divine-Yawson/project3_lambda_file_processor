pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    S3_BUCKET = 'lambda-upload-bucket-1ac95f56'  // Use the correct bucket name here
    FUNCTION_NAME = 'FileProcessor'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', credentialsId: 'github-credentials', url: 'https://github.com/Divine-Yawson/project3_lambda_file_processor.git'
      }
    }

    stage('Prepare Lambda Zip') {
      steps {
        sh '''
          which zip || yum install -y zip
          cd lambda-processor
          zip lambda.zip lambda_function.py
        '''
      }
    }

    stage('Terraform Init & Plan') {
      steps {
        withAWS(credentials: 'aws-access-key', region: "${AWS_REGION}") {
          sh '''
            cd lambda-processor
            terraform init
            terraform plan -out=tfplan -input=false -lock=false
          '''
        }
      }
    }

    stage('Terraform Apply') {
      steps {
        input message: "Approve apply?"
        withAWS(credentials: 'aws-access-key', region: "${AWS_REGION}") {
          sh '''
            cd lambda-processor
            terraform apply -auto-approve tfplan -lock=false
          '''
        }
      }
    }

    stage('Update Lambda Function') {
      steps {
        withAWS(credentials: 'aws-access-key', region: "${AWS_REGION}") {
          sh '''
            cd lambda-processor
            aws s3 cp lambda.zip s3://$S3_BUCKET/
            aws lambda update-function-code --function-name $FUNCTION_NAME --s3-bucket $S3_BUCKET --s3-key lambda.zip --region $AWS_REGION
          '''
        }
      }
    }
  }

  post {
    failure {
      echo '❌ Build failed!'
    }
    success {
      echo '✅ Deployment complete!'
    }
  }
}
